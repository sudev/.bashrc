#A function to unzip files (any format )
superzip()
{
if [ -f $1 ];
then 
echo "its a valid zip file";
#match the zip command according to its extension 	
	case $1 in
	     *.tar.bz2)   tar xjf $1        ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1       ;;
             *.rar)       rar x $1     ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1        ;;
             *.tbz2)      tar xjf $1      ;;
             *.tgz)       tar xzf $1       ;;
             *.zip)       unzip $1     ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
             *)           echo "'$1' cannot be extracted via superzip()" ;;
         esac
else
	echo "I can't help you with this format";
fi
}
#a funtion todo mkdir and cd into it 
mkcd()
{
mkdir $1;
cd $1;
}
man() {
        env \
                LESS_TERMCAP_mb=$(printf "\e[1;31m") \
                LESS_TERMCAP_md=$(printf "\e[1;31m") \
                LESS_TERMCAP_me=$(printf "\e[0m") \
                LESS_TERMCAP_se=$(printf "\e[0m") \
                LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
                LESS_TERMCAP_ue=$(printf "\e[0m") \
                LESS_TERMCAP_us=$(printf "\e[1;32m") \
                man "$@"
}
#A didnt knew about the pkill function when I wrote this stuff 

killer() { 
    echo "I'm going to kill these process";
    ps -ef | grep $1 | grep -v grep
    echo "Can I ? [y]es [n]o ";
    read ans;
    if [[ $ans =~ "y" ]] ;
    then 
    ps -ef | grep  $1  | grep -v grep | awk '{print $2}' | xargs kill -s TERM 
    fi 
}
#a function to search over the home and cd into it 
#http://sudev.github.io/posts/bashfunction/
scd() {
        pathe=$(find ~ -name $1 -type d -print -quit | head -n 1)
            cd $pathe
}

#Dictionary 

dict() {

#Creating a temp folder 
dir=~/.dict

#Check for the existence if not create one
[[ -d $dir ]] || mkdir $dir


#download respective file from dictionary dot com 
# -q => do it quietly ie nothing @ screen 
# -O save it as mean
wget -q -O $dir/mean wget http://dictionary.reference.com/browse/$1

#Please DONT hardcode the value, give it to variable and then use it 
file=$dir/mean

#greping out result
m=$(cat $file | grep description | grep -Po 'content=.*.*See more' | grep -Po '\,.*.\.')

#saving the error code 
k=$(echo $?)

#echoing
echo "Meaning of the word "$1" is"$m

#checks if the word was actually available else throws an error
if [[ $k -gt 0 ]]; 
then 
    echo ".........oops, cant find word "$1;
fi
 
}

#pronunciation 

pron(){
#A very simple pronunciation 
# mplayer required 

#Creating a temp folder 
dir=~/.dict

#Check for the existence if not create one
[[ -d $dir ]] || mkdir $dir


#download respective file from dictionary dot com 
# -q => do it quietly ie nothing @ screen 
# -O save it as mean
wget -q -O $dir/pron http://en.wiktionary.org/wiki/$1

#Please DONT hardcode the value, give it to variable and then use it 
file=$dir/pron

#greping out result
m=$(cat $file | grep -Po '//upload.*.ogg' | grep -v type)

#saving the error code 
k=$(echo $?)

wget -q -O $dir/$1.ogg http:$m 
mplayer $dir/$1.ogg
rm $dir/$1.ogg

#checks if the word was actually available else throws an error
if [[ $k -gt 0 ]]; 
then 
    echo ".........oops, cant find word "$1;
fi
}
